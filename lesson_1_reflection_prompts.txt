How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Subsequently by comparison of the two different files we could easily see the difference.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having access to the entire history would make streamlining, correction, and debugging a lot more effective.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros of manually creating a commit provide better detail and familiarity. Cons would be it consume more time. Pros of automated saves in google is its a time saver. Cons would perhaps be less detailed and little familiarity.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is mainly for collaboration purposes. With many record changes done by yourself or others over time it makes it easier to recall specific versions at a later time.

How can you use the commands git log and git diff to view the history of files?

    The git log command will list the version histories while the git diff command will show the changes made “relative to the index”.

How might using version control make you more confident to make changes that
could break something?

    Essentially if there was a mistake made then it would be easy enough to recover the previous version.

Now that you have your workspace set up, what do you want to try using Git for?

    Storing my code for future projects.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
